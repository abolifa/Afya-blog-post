// app/[locale]/layout.tsx
import type { ReactNode } from "react";
import { NextIntlClientProvider, hasLocale } from "next-intl";
import { notFound } from "next/navigation";
import { routing } from "@/i18n/routing";
import type { Metadata } from "next";
import { Cairo } from "next/font/google";
import "@/app/globals.css";
import { cn } from "@/lib/utils";
import { ThemeProvider } from "@/providers/theme-provider";
import AppProvider from "@/providers/app-provider";
import { Toaster } from "@/components/ui/sonner";

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

// Optional while debugging
export const dynamic = "force-dynamic";

const cairo = Cairo({
  variable: "--font-cairo",
  subsets: ["arabic"],
  weight: ["200", "300", "400", "500", "600", "700", "800", "900"],
  display: "swap",
  fallback: ["sans-serif"],
});

export default async function LocaleLayout({
  children,
  params, // NOTE: this is a Promise in your Next version
}: {
  children: ReactNode;
  params: Promise<{ locale: "ar" | "en" }>;
}) {
  // âœ… Await the params before using
  const { locale } = await params;

  if (!hasLocale(routing.locales, locale)) {
    notFound();
  }

  // Load per-locale messages directly from /messages
  const messages = (await import(`@/messages/${locale}.json`)).default;
  const isRTL = locale === "ar";

  return (
    <html
      lang={locale}
      dir={isRTL ? "rtl" : "ltr"}
      suppressHydrationWarning
      className={cairo.variable}
    >
      <body
        className={cn("antialiased p-0", cairo.className)}
        suppressHydrationWarning
      >
        {/* key={locale} forces remount so messages definitely switch */}
        <NextIntlClientProvider
          key={locale}
          locale={locale}
          messages={messages}
        >
          <ThemeProvider
            attribute="class"
            defaultTheme="system"
            enableSystem
            disableTransitionOnChange
          >
            <AppProvider>{children}</AppProvider>
            <Toaster />
          </ThemeProvider>
        </NextIntlClientProvider>
      </body>
    </html>
  );
}
